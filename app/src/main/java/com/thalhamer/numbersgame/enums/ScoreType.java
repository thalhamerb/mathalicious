package com.thalhamer.numbersgame.enums;import com.thalhamer.numbersgame.R;/** * Score type * <p/> * Created by Brian on 7/29/2015. */public enum ScoreType {    POINTS(" for most points", "points", "Points",            "Points - get largest sequence of tiles possible in one move.  For every extra tile, your score doubles up to a max of 9 tiles!",            R.mipmap.explain_points),    CHARACTER_FACES(" to clear character faces", "faces", "Faces",            "Drop Faces - get as many character faces as you can to reach bottom of screen!",            R.mipmap.explain_faces),    TILE_SEQUENCE_LENGTH(" to get sequences of %s tiles", "sequences", "Seq of %s",            "Tile Sequences - get sequences of tiles of at least the minimum length in one move!",            R.mipmap.explain_sequences),    TIME(" for lowest time", " minutes", "Elapsed",            "not included...", 5);    private String gameDescriptionEnd;    private String popupSuffix;    private String gameActivityLabel;    private String fullGameDescription;    private int explanationId;    ScoreType(String gameDescriptionEnd, String popupSuffix, String gameActivityLabel, String fullGameDescription, int explanationId) {        this.gameDescriptionEnd = gameDescriptionEnd;        this.popupSuffix = popupSuffix;        this.gameActivityLabel = gameActivityLabel;        this.fullGameDescription = fullGameDescription;        this.explanationId = explanationId;    }    public String getGameDescriptionEnd() {        return gameDescriptionEnd;    }    public String getPopupSuffix() {        return popupSuffix;    }    public String getGameActivityLabel() {        return gameActivityLabel;    }    public String getFullGameDescription() {        return fullGameDescription;    }    public int getExplanationId() {        return explanationId;    }}